---
- name: 檢查並記錄 unreachable 主機
  block:
    - name: 取得所有應該執行的主機
      set_fact:
        expected_hosts: "{{ groups['all'] }}"
    
    - name: 讀取已記錄的主機
      shell: "cat /tmp/ansible_run_status.txt 2>/dev/null | cut -d'|' -f2 || echo ''"
      register: recorded_hosts_raw
      changed_when: false
      become: no

    - name: 解析已記錄的主機清單
      set_fact:
        recorded_hosts: "{{ recorded_hosts_raw.stdout_lines }}"

    - name: 找出未記錄的主機（unreachable）
      set_fact:
        unreachable_hosts: "{{ expected_hosts | difference(recorded_hosts) }}"

    - name: 取得本地時間
      setup:
        filter: ansible_date_time
      delegate_to: localhost
      delegate_facts: true
      run_once: true

    - name: 為 unreachable 主機補充記錄
      lineinfile:
        path: /tmp/ansible_run_status.txt
        line: "{{ hostvars['localhost']['ansible_date_time']['iso8601'] }}|{{ item }}|unreachable"
        create: yes
      loop: "{{ unreachable_hosts }}"
      when: unreachable_hosts | length > 0
      become: no

- name: 讀取完整狀態檔案
  shell: "cat /tmp/ansible_run_status.txt 2>/dev/null || echo ''"
  register: status_content
  changed_when: false
  become: no

- name: 解析狀態
  set_fact:
    all_status: "{{ status_content.stdout_lines | map('split', '|') | list }}"
    
- name: 分類主機
  set_fact:
    success_hosts: "{{ all_status | selectattr('2', 'equalto', 'success') | list }}"
    failed_hosts: "{{ all_status | rejectattr('2', 'equalto', 'success') | list }}"

- name: 取得本地時間用於通知
  setup:
    filter: ansible_date_time
  run_once: true

- name: Debug - 顯示狀態資訊
  debug:
    msg:
      - "總主機數: {{ groups['all'] | length }}"
      - "記錄主機數: {{ all_status | length }}"
      - "成功: {{ success_hosts | length }}"
      - "失敗: {{ failed_hosts | length }}"
      - "失敗主機: {{ failed_hosts | map(attribute='1') | list }}"

- name: 發送成功通知
  uri:
    url: "{{ discord_webhook }}"
    method: POST
    body_format: json
    body:
      content: "✅ **{{ notification_title }} 系統更新完成**"
      embeds:
        - title: "Ansible 執行成功"
          description: "所有 {{ groups['all'] | length }} 台主機已完成系統更新"
          color: 3066993
          fields:
            - name: "✅ 成功主機"
              value: "{{ success_hosts | length }} 台"
              inline: true
            - name: "⏱️ 執行時間"
              value: "{{ ansible_date_time.time }}"
              inline: true
            - name: "📅 執行日期"
              value: "{{ ansible_date_time.date }}"
              inline: true
          footer:
            text: "今天 {{ ansible_date_time.time }}"
          timestamp: "{{ ansible_date_time.iso8601 }}"
    status_code: 204
  when: failed_hosts | length == 0
  become: no

- name: 發送失敗通知
  uri:
    url: "{{ discord_webhook }}"
    method: POST
    body_format: json
    body:
      content: "❌ **{{ notification_title }} 系統更新失敗**"
      embeds:
        - title: "Ansible 執行失敗"
          description: |
            {% for host in failed_hosts %}
            {{ host[0] }} {{ host[1] }} **{{ host[2] }}**
            {% endfor %}
          color: 15158332
          footer:
            text: "今天 {{ ansible_date_time.time }}"
          timestamp: "{{ ansible_date_time.iso8601 }}"
    status_code: 204
  when: failed_hosts | length > 0
  become: no

- name: 清理狀態檔案
  file:
    path: /tmp/ansible_run_status.txt
    state: absent
  become: no

- name: 標記任務失敗
  fail:
    msg: "{{ failed_hosts | length }} 台主機更新失敗: {{ failed_hosts | map(attribute='1') | join(', ') }}"
  when: failed_hosts | length > 0