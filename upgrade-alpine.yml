- hosts: all
  become: yes
  become_user: root
  vars:
    discord_webhook: "{{ discord_webhook_url }}"
  gather_facts: yes
  
  tasks:
    - name: Update apk repo and cache on all Alpine boxes
      apk: 
        update_cache: yes
      register: update_result
      ignore_unreachable: yes
      ignore_errors: yes

    - name: Upgrade all packages on servers
      apk: 
        upgrade: yes
      register: upgrade_result
      ignore_unreachable: yes
      ignore_errors: yes

    # 判斷主機狀態並記錄
    - name: 判斷主機狀態
      set_fact:
        host_status: >-
          {% if update_result.unreachable is defined and update_result.unreachable %}
          unreachable
          {% elif upgrade_result.unreachable is defined and upgrade_result.unreachable %}
          unreachable
          {% elif update_result.failed is defined and update_result.failed %}
          failed
          {% elif upgrade_result.failed is defined and upgrade_result.failed %}
          failed
          {% else %}
          success
          {% endif %}
      ignore_errors: yes

    - name: 記錄主機狀態
      lineinfile:
        path: /tmp/ansible_run_status.txt
        line: "{{ ansible_date_time.iso8601 }}|{{ inventory_hostname }}|{{ ansible_host | default(inventory_hostname) }}|{{ host_status }}"
        create: yes
      delegate_to: localhost
      become: no
      ignore_errors: yes

- hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    discord_webhook: "{{ discord_webhook_url }}"
  
  tasks:
    - name: 讀取狀態檔案
      shell: "cat /tmp/ansible_run_status.txt 2>/dev/null || echo ''"
      register: status_content
      changed_when: false
      become: no

    - name: 解析狀態
      set_fact:
        all_status: "{{ status_content.stdout_lines | map('split', '|') | list }}"
        
    - name: 分類主機
      set_fact:
        success_hosts: "{{ all_status | selectattr('3', 'equalto', 'success') | list }}"
        failed_hosts: "{{ all_status | rejectattr('3', 'equalto', 'success') | list }}"

    - name: 發送成功通知
      uri:
        url: "{{ discord_webhook }}"
        method: POST
        body_format: json
        body:
          content: "✅ **Alpine 系統更新完成**"
          embeds:
            - title: "Ansible 執行成功"
              description: "所有 {{ all_status | length }} 台主機已完成系統更新"
              color: 3066993
              fields:
                - name: "✅ 成功主機"
                  value: "{{ success_hosts | length }} 台"
                  inline: true
                - name: "⏱️ 執行時間"
                  value: "{{ ansible_date_time.time }}"
                  inline: true
                - name: "📅 執行日期"
                  value: "{{ ansible_date_time.date }}"
                  inline: true
              timestamp: "{{ ansible_date_time.iso8601 }}"
        status_code: 204
      when: failed_hosts | length == 0
      become: no

    - name: 發送失敗通知
      uri:
        url: "{{ discord_webhook }}"
        method: POST
        body_format: json
        body:
          content: "❌ **Alpine 系統更新失敗**"
          embeds:
            - title: "Ansible 執行失敗"
              description: |
                {% for host in failed_hosts %}
                {{ host[0] }} {{ host[2] }} **{{ host[3] }}**
                {% endfor %}
              color: 15158332
              timestamp: "{{ ansible_date_time.iso8601 }}"
        status_code: 204
      when: failed_hosts | length > 0
      become: no

    - name: 清理狀態檔案
      file:
        path: /tmp/ansible_run_status.txt
        state: absent
      become: no

    - name: 標記任務失敗
      fail:
        msg: "{{ failed_hosts | length }} 台主機更新失敗"
      when: failed_hosts | length > 0